{"version":3,"sources":["data/topics.csv","img/law.png","img/github.svg","img/index-man.svg","img/index-woman.svg","img/howtoplay.png","img/winners.svg","Components/Navbar.js","Components/Footer.js","Components/Home/TitleCard.js","Components/Home/HowToPlay.js","Components/Home/Home.js","Components/CreateGame/GetTopicModal.js","Components/CreateGame/InputTopic.js","Components/CreateGame/InputPlayers.js","Components/LogIn.js","Components/CreateGame/CreateGame.js","Components/Game/AudienceJoin.js","Components/Game/Scoreboard.js","Components/Game/Timer.js","Components/Game/Controls.js","Components/Game/AdminGame.js","Components/Game/WinnerModal.js","Components/Game/Vote.js","Components/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","this","unregisterAuthObserver","firebase","auth","onAuthStateChanged","user","setState","isSignedIn","props","updateGame","onClick","signOut","to","className","src","require","width","height","alt","id","signInOrOut","React","Component","Footer","href","TitleCard","handleInput","event","value","onInput","target","buttonDisabled","length","disabled","state","type","placeholder","maxLength","onChange","role","HowToPlay","Home","GetTopicModal","onCategorySelected","category","onCategorySelection","nestedModal","Modal","show","onHide","handleClose","centered","Header","closeButton","Title","Body","class","options","Button","variant","topic1","topic2","InputTopic","showModal","modal","closeModal","stateChanges","selectedTopic","selected","categoryTopics","i","data","topic","push","firstTopic","Math","floor","random","secondTopic","input","closeAll","d3","topics","then","topicsVisited","includes","key","data-toggle","data-target","generateCategories","InputPlayers","LogIn","uiConfig","firebaseAuth","fbAuth","CreateGame","player1","player2","sessionID","database","ref","on","snapshot","exists","sesh","val","ids","Object","keys","sessionRef","AudienceJoin","code","Scoreboard","Timer","startCountdown","minutesLeft","convertToMinutes","timeLeft","isBackgroundYellow","getPhaseName","currentPhase","phases","phaseIndex","title","outputString","speaker","setInterval","everySecond","isAdminTimer","clearInterval","timerObject","console","log","seconds","sec","trunc","Controls","buttonClicked","enable","disable","winner","aria-label","prevPhase","aria-hidden","nextPhase","newPhase","AdminGame","WinnerModal","Vote","onClickPlayer1","voted","onClickPlayer2","disableVoting","votes","votedPlayer","numVotes","castVote","size","votingMessage","modalBody","displayWinner","Game","sessionIsGood","firebaseListener","once","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","App","handleChange","set","bind","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1dc0a66e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/topics.b3d8a1b2.csv\";","module.exports = __webpack_public_path__ + \"static/media/law.79e97b25.png\";","module.exports = __webpack_public_path__ + \"static/media/github.192a6620.svg\";","module.exports = __webpack_public_path__ + \"static/media/index-man.f1ccb1e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/index-woman.f3034efd.svg\";","module.exports = __webpack_public_path__ + \"static/media/howtoplay.98c4b744.png\";","module.exports = __webpack_public_path__ + \"static/media/winners.49d728a1.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase/app';\n\nclass Navbar extends React.Component {\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        this.setState({\n          isSignedIn: !!user\n        }, () => {\n          this.props.updateGame(\"isSignedIn\", !!user)\n        })\n\n      }\n    );\n  }\n  \n  // why do we need to this again? should it be in here or App?\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  signInOrOut() {\n    if (this.props.isSignedIn === true) {\n      return (\n        <span onClick= {() => firebase.auth().signOut()}><strong>Sign Out</strong></span>\n      )\n    } else {\n      return (\n        <Link to=\"/sign-in\">Sign In</Link>\n      )\n    }\n  }\n\n  render() {\n    return(\n      <nav className=\"navbar fixed-top navbar-light\">\n        <div className=\"d-flex justify-content-between\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            <img src={require(\"../img/law.png\")} width=\"30\" height=\"30\" className=\"d-inline-block align-top logo\" alt=\"A gavel\"/>\n            DebateNOW\n          </Link>\n        </div>\n        <div id=\"nav-links\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/create-game\">Create New Game</Link>\n          {this.signInOrOut()}\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default Navbar;","import React from 'react';\n\n/**\n * renders the website footer.\n * static\n * used on all pages\n */\nclass Footer extends React.Component {\n  render() {\n    return(\n      <footer>\n          <div className=\"d-flex justify-content-between align-items-center\">\n              <div>\n                  {/* <p className=\"mb-0\">Read up on why we made this tool<a href=\"proposal.html\">here.</a></p> */}\n                  <p className=\"mb-0\">&copy; 2020 Kiran Pradhan and Patrin Sinteppadon</p>\n              </div>\n              <a href=\"https://github.com/info340a-w20/project-kpdebate\">\n                  <img className=\"social-media\" src={require(\"../img/github.svg\")} alt=\"Github logo\" />\n              </a>\n          </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass TitleCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      disabled: true\n    }\n  }\n\n  handleInput = (event, value) => {\n    this.props.onInput(\"sessionID\", event.target.value);\n    let buttonDisabled = (event.target.value.length !== 4)\n    this.setState({disabled: buttonDisabled});\n  }\n\n  render() {\n    return(\n      <div id=\"title-card\" className=\"container\">\n        <div className=\"text-center\">\n          {/* Header */}\n          <header>\n            <h1 className=\"display-1 font-weight-bold\">DebateNOW</h1>\n            <p className=\"lead subtitle font-weight-bold\">A simple game where you argue about stuff</p>\n            <hr className=\"my-4\" />\n          </header>\n\n          {/* Game options */}\n          <div className=\"row\">\n            {/* Flavor img */}\n            <div className=\"col\">\n              <div className=\"d-flex justify-content-center\">\n                <img id=\"left-img\" className=\"img-title\" src={require(\"../../img/index-man.svg\")} alt=\"a man\" />\n              </div>\n            </div>\n\n            {/* New game / Join Game */}\n            <div className=\"col text-center\">\n              <div className=\"d-flex justify-content-center align-items-center\">\n                <form className=\"mb-2 mr-sm-2\">\n                  <input id=\"session-name\" className=\"border border-secondary\" type=\"text\"\n                    placeholder=\"Enter Game Code\" maxLength={4} onChange={this.handleInput}/>\n                </form>\n                <Link to=\"/game\"><button id=\"btn-join\" className=\"btn btn-primary btn-md join\" href=\"game.html\" disabled={this.state.disabled}>Join!</button></Link>\n              </div>\n              <h2 className=\"lead my-4\">OR</h2>\n              <Link to=\"/create-game\"><a className=\"btn btn-primary btn-lg create\" href=\"create-game.html\" role=\"button\">Create New Game</a></Link>\n              \n            </div>\n\n            {/* Flavor img */}\n            <div className=\"col\">\n              <div className=\"d-flex justify-content-center\">\n                <img className=\"img-title\" src={require(\"../../img/index-woman.svg\")} alt=\"a woman\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TitleCard;","import React from 'react';\n\n/**\n * renders the \"How to play\" section of the home page.\n * No props. static.\n */\nclass HowToPlay extends React.Component {\n  render() {\n    return( \n      <div id=\"how-to-play\">\n        <h2 className=\"text-center display-4 font-weight-bold\"> How to Play </h2>\n        <div>\n          <p className=\"subcaption text-center\">\n            Practice your debate skills with this simple proof-of-concept web game.\n          </p>\n        </div>\n        {/* <div className=\"w-70\">\n          <ul>\n            <li>Organize a game by choosing a randomly generated topic or by typing in your own.\n            </li>\n            <li>Choose two players to debate.</li>\n            <li>Tell your friends to join in using the code provided.</li>\n            <li>Press begin and SPAR!</li>\n          </ul>\n        </div> */}\n        <div className=\"w-70 text-left\">\n          <p>One person must create the game with two debaters and a topic in mind. Audience members can\n          join by using the provided game code. Watch the two go head to head, and then vote on the\n          winners.</p>\n          \n          <p>Each debater takes turns going through the following phases in the debate format.</p>\n          <ol>\n            <li>Opening Statements. Each speaker gives their initial statements on why their argument is correct. Try to give a thesis and a few arguments.</li>\n            <li>Rebuttal. Each speaker gets the chance to counter their opponent's initial statements. Try to remember their arguments and use reason to make them sound invalid.</li>\n            <li>Cross-Examination. Each speaker gets to ask questions to their opponent for 3 minutes, hoping to poke holes in their arguments. The audience can join in too!</li>\n            <li>Closing Statements. Each speaker delivers a final summary on their argument. Try to summarize where you succeeded and where your opponent fumbled!</li>\n            <li>Voting. The debate is over! Time for Admin to enable voting for the audience.</li>\n          </ol>\n\n          <p>This app takes technical inspiration from<a target=\"_blank\" href=\"https://kahoot.it/\">kahoot.it</a>, and content inspiration the<a target=\"_blank\" href=\"https://www.facinghistory.org/resource-library/teaching-strategies/spar-spontaneous-argumentation\">Spontaneous Argumentation</a>debate event.</p>\n        </div>\n        <div className=\"text-center\">\n          <img src={require(\"../../img/howtoplay.png\")} className=\"content-image\" alt=\"Two men thinking\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HowToPlay;","import React from 'react';\nimport TitleCard from './TitleCard.js';\nimport HowToPlay from './HowToPlay.js';\nimport '../../css/home.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"w-70 mx-auto\">\n        <TitleCard onInput={this.props.updateGame}/>\n        <HowToPlay />\n      </div>\n    );\n\n  }\n}\n\nexport default Home;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport '../../css/create-game.css';\n\nclass GetTopicModal extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = { \n        nestedModal: false,\n        category: \"Anything\"\n      }\n  }\n\n  onCategorySelected = (event, value) => {\n    this.setState({category: event.target.value});\n    this.props.onCategorySelection(event, value);\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal show={this.props.show} onHide={this.props.handleClose} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Get random topics</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>Select a general category for your topic choices.</p>\n            <select class=\"browser-default custom-select w-50\" value={this.state.category} onChange={this.onCategorySelected}>\n              <option value=\"Anything\">Anything</option>\n              {this.props.options}\n            </select>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={() => {this.setState({nestedModal: true})}}>\n              Get Topics\n            </Button>\n            <Modal show={this.state.nestedModal} onHide={() => {this.setState({nestedModal: false})}} centered>\n            <Modal.Header closeButton>\n              <Modal.Title>Debate about:</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Button variant=\"secondary\" onClick={() => this.props.handleClose(this.props.topic1)}>\n                  {this.props.topic1}\n                </Button>\n                <p class=\"my-2\">OR</p>\n                <Button variant=\"secondary\" onClick={() => this.props.handleClose(this.props.topic2)}>\n                  {this.props.topic2}\n                </Button>\n            </Modal.Body>\n            <Modal.Footer>\n            </Modal.Footer>\n          </Modal>\n            <Button variant=\"secondary\" onClick={this.props.handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default GetTopicModal;","import React from 'react';\nimport GetTopicModal from './GetTopicModal.js';\nimport * as d3 from 'd3';\nimport topics from '../../data/topics.csv';\nimport '../../css/create-game.css'\n\n/**\n * Controls the input form for selecting a topic.\n * Exists in Create Game page.\n * @prop {function} updateGame - callback function to change the state of App\n */\nexport class InputTopic extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            modal: false,\n            closeAll: false,\n            category: \"Anything\",\n            selectedTopic: \"\"\n        }\n    }\n\n    componentDidMount() {\n        d3.csv(topics).then((data) => {\n            // choose 2 random default topics\n            let firstTopic = Math.floor((Math.random() * data.length));\n            let secondTopic = null;\n            while (secondTopic === null || secondTopic === firstTopic) { // to avoid duplicates\n                secondTopic = Math.floor((Math.random() * data.length));\n            }\n            this.setState({\n                data: data,\n                \"topic2\": data[secondTopic].topic,\n                \"topic1\": data[firstTopic].topic\n            });\n        });\n    }\n\n    showModal = () => {\n        this.setState({modal: true})\n    }\n\n    closeModal = (value) => {\n        let stateChanges = {\n            selectedTopic: value,\n            modal: false\n        };\n        this.setState(stateChanges);\n        this.onInput(value);\n    }\n\n    generateCategories() {\n        let options = [];\n        let topicsVisited = [];\n        for (let i = 0; i < this.state.data.length; i++) {\n            let topic = this.state.data[i];\n            if (!topicsVisited.includes(topic.category)) {\n                topicsVisited.push(topic.category);\n                options.push(<option key={i} value={topic.category}>{topic.category}</option>);\n            }\n        }\n        return options;\n    }\n\n    // after a category is selected in GetTopicModal,\n    // update state and generate 2 random topics from category\n    onCategorySelection = (event) => {\n        let selected = event.target.value;\n        // after a category is selected, generate 2 random topics\n        let categoryTopics = [];\n        // evaluate what subcategory to \"query\" from\n        if (selected !== \"Anything\") {\n            for (let i = 0; i < this.state.data.length; i++) {\n                let topic = this.state.data[i];\n                if (topic.category === selected) {\n                    categoryTopics.push(topic);\n                }\n            }\n        } else {\n            categoryTopics = this.state.data;\n        }\n        // randomly select 2 topics from the described category\n        let firstTopic = Math.floor((Math.random() * categoryTopics.length));\n        let secondTopic = null;\n        while (secondTopic === null || secondTopic === firstTopic) { // to avoid duplicates\n            secondTopic = Math.floor((Math.random() * categoryTopics.length));\n        }\n        this.setState({\n            category: selected,\n            \"topic2\": categoryTopics[secondTopic].topic,\n            \"topic1\": categoryTopics[firstTopic].topic \n        });\n    }\n\n    onInput = (input) => {\n        this.setState({\"selectedTopic\": input})\n        this.props.onInput(\"topic\", input);\n    }\n\n    render(){\n        return ( \n            <section id=\"topic\" className=\"createGameFirst createGameContainer\">\n            <div className=\"card createGameCard\">\n                <div className=\"card-body\">\n                    <h4 className=\"card-title\">Topic</h4>\n                        <div className=\"mx-3\">\n                            <div className=\"row\">\n                                <form className=\"col-sm-8 col-md-6 mx-auto\">\n                                    <input id=\"input-topic\" className=\"w-100\" type=\"text\" placeholder=\"Enter a debate topic...\" value={this.state.selectedTopic} onChange={(event, value) => this.onInput(event.target.value)}/>\n                                </form>\n                            </div>\n                        <div className=\"row\">\n                            <button id=\"open-modal\" className=\"btn btn-dark mt-2 ml-auto\" data-toggle=\"modal\" data-target=\"#modalRandomize\" onClick={()=> {this.showModal()}}>Randomize!</button>\n                        </div>\n                    </div>\n                </div>\n                <GetTopicModal show={this.state.modal} handleClose={this.closeModal} onCategorySelection={this.onCategorySelection} options={this.generateCategories()} topic1={this.state.topic1} topic2={this.state.topic2}/>\n            </div>\n            </section>\n        )\n    }\n} ","import React from 'react';\nimport '../../css/create-game.css'\n\nexport class InputPlayers extends React.Component {\n    render() {\n        return (\n            <section id=\"players\" class=\"createGameContainer\">\n                <div class=\"card createGameCard\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">Players</h4>\n                        <div class=\"mx-3\">\n                            <div class=\"row\">\n                                <form class=\"col-sm-8 col-md-6 mx-auto\">\n                                    <input id=\"input-player1\" class=\"w-100\" type=\"text\" placeholder=\"Enter Player One......\" onChange={(event, value) => this.props.onInput(\"player1\", event.target.value)}/>\n                                    <input id=\"input-player2\" class=\"w-100\" type=\"text\" placeholder=\"Enter Player Two......\" onChange={(event, value) => this.props.onInput(\"player2\", event.target.value)}/>\n                                </form> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n    \n}","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nclass LogIn extends React.Component {\n    render() {\n        return (\n            <div id=\"login\">\n                <h1>Please sign in</h1>\n                <p>to host a debate</p>\n                <StyledFirebaseAuth uiConfig={this.props.uiConfig} firebaseAuth={this.props.fbAuth}/>\n            </div>\n        )\n    }\n}\n\nexport default LogIn;","import React from 'react';\nimport { InputTopic } from './InputTopic.js';\nimport { InputPlayers } from './InputPlayers.js';\nimport LogIn from '../../Components/LogIn.js';\nimport { Link } from 'react-router-dom';\nimport '../../css/create-game.css';\nimport firebase from 'firebase/app';\n\nclass CreateGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            topic: \"\",\n            player1: \"\",\n            player2: \"\"\n        }\n        // generate and lift up random sessionID\n        let sessionID = Math.floor(1000 + Math.random() * 9000);\n        let existingSesssions = firebase.database().ref('sessions');\n        existingSesssions.on('value', (snapshot) => {\n            if (snapshot.exists()) {\n                let sesh = snapshot.val();\n                let ids = Object.keys(sesh);\n                while (ids.includes(sessionID)) { // to avoid duplicate ids\n                    sessionID = Math.floor(1000 + Math.random() * 9000);\n                }\n            }\n        })\n        this.props.updateGame(\"sessionID\", sessionID);\n        this.sessionRef = firebase.database().ref('sessions/' + sessionID);\n    }\n\n    componentDidMount() {\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n            (user) => {\n                this.setState({\n                    isSignedIn: !!user\n                }, () => {\n                    this.props.updateGame(\"isSignedIn\", !!user)\n                })\n            }\n        );\n    }\n\n    componentWillUnmount() {\n        this.unregisterAuthObserver();\n    }\n\n    onChange = (key, value) => {\n        this.setState({ [key]: value });\n        this.props.updateGame(key, value);\n    }\n\n    render() {\n        // must sign in to host a debate\n        if (!this.state.isSignedIn) {\n            return (\n                <LogIn uiConfig={this.props.uiConfig} fbAuth={firebase.auth()}/>\n            );\n        } else {\n        return(\n            <div className=\"w-70 mx-auto\">\n                <InputTopic \n                    onInput={this.onChange}\n                />\n                <InputPlayers onInput={this.onChange}/>\n                <section class=\"createGameContainer\">\n                    <div class=\"text-center\">\n                        <Link to=\"/admin-game\"><button id=\"btn-start\" class=\"btn btn-primary btn-lg mt-2 mx-auto\" disabled={this.state.topic === \"\" || this.state.player1 === \"\" || this.state.player2 === \"\"}>Begin Debate</button></Link>\n                    </div>\n                </section>\n            </div>\n        )\n        }\n    }\n}\n\nexport default CreateGame;","import React from 'react';\n\nclass AudienceJoin extends React.Component {\n    render() {\n        return(\n            <section className=\"container\">\n                <div>\n                    <p>\n                        Invite audience members to join this debate at<a href=\"https://info340a-w20.github.io/project-kpdebate/\">info340a-w20.github.io/project-kpdebate/</a>with game\n                        code<span className=\"code\"> {this.props.code}</span>\n                    </p>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default AudienceJoin;","import React from 'react';\nimport '../../css/game.css';\n\n/**\n * displays the topic, the names of the players, and their stance on the argument\n * @prop {string} player1 - name of the first player\n * @prop {string} player2 - name of the second player\n * @prop {string} topic - the argument being debated\n */\nclass Scoreboard extends React.Component {\n    render() {\n        return (\n            <section className=\"first gameContainer\">\n                {/* Row with names */}\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 id=\"player-1\">{this.props.player1}</h1>\n                        <h2>is arguing Pro</h2>\n                    </div>\n\n                    <div className=\"col\">\n                        <h1 id=\"player-2\">{this.props.player2}</h1>\n                        <h2>is arguing Con</h2>\n                    </div>\n                </div>\n\n                {/* Row with topic */}\n                <div className=\"row\">\n                    <h3 id=\"topic\" className=\"font-weight-bold mb-0\">{this.props.topic}</h3>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Scoreboard;","import React from 'react';\nimport '../../css/game.css';\n\n/**\n * controls the timer of the current round in the game.\n * @prop {string} sessionID - the ID of the session being accessed\n * @prop {object} timerObject - the object representing the timer.\n * @prop {number} timeLeft - number of seconds left in the round.\n * @prop {number} phaseIndex - the current phase of the debate.\n * @prop {object} phases - const object of the phases of the debate.\n * @prop {boolean} isAdminTimer - determines whether this timer is in Admin Game.\n * @prop {function} updateGame - the callback function used to update App's state\n */\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.sessionRef = firebase.database().ref('sessions/' + this.props.sessionID);\n        this.startCountdown();\n    }\n\n    render() {\n        let minutesLeft = this.convertToMinutes(this.props.timeLeft);\n        return (\n        <section className=\"gameContainer\"> \n            <div className=\"timer col-md-6\">\n                <div id=\"timer-card\" className={\"card timerCard \" + this.isBackgroundYellow()}>\n                    <h3 className=\"card-title text-center\">\n                        <div className=\"col mt-2\">\n                            <p id=\"timer-label\">{this.getPhaseName()}</p>\n                            <p id=\"timer\" className=\"mb-0\">{minutesLeft}</p>\n                        </div>\n                    </h3>\n                </div>\n            </div>\n        </section> \n        );\n    }\n\n    /**\n     * returns a suitable name for the current Phase.\n     * format: \"CURRENT_SPEAKER - CURRENT PHASE\"\n     */\n    getPhaseName() {\n        let currentPhase = this.props.phases[this.props.phaseIndex];\n        if (currentPhase.title === \"Voting\") {\n            return \"Time to Vote!\";\n        }\n\n        let outputString = (currentPhase.speaker === 1 ? this.props.player1 : this.props.player2);\n        outputString += \" - \" + currentPhase.title;\n        return outputString;\n    }\n\n    /**\n     * initializes a timer that updates the visual element of a timer very second.\n     */\n    startCountdown() {\n        return setInterval(() => this.everySecond(this.props.timeLeft), 1000);\n    }\n\n    /**\n     * the behavior of the timer for every second the timer ticks.\n     * ! the interval technically doesn't clear. Will that screw up setting up timers after the first one?\n     */\n    everySecond(timeLeft) {\n        let i = timeLeft;\n        if (i === 0 && this.props.isAdminTimer) {\n            clearInterval(this.props.timerObject); // clear the timer\n            this.props.updateGame(\"timerObject\", null);\n        } else if (this.props.isAdminTimer){\n            i--;\n            this.props.updateGame(\"timeLeft\", i);\n            console.log(\"time left:\" + timeLeft);\n        } else {\n            // console.log(\"not an admin timer!\");\n        }\n    }\n\n    updateFirebase() {\n        // hmm shouldn't this be declared in App\n    }\n\n    /**\n     * If seconds is greater than 60, returns it in a minutes-converted format.\n     * Also, if seconds=0, converts the message to \"Time's Up!\"\n     * @param {number} seconds - the number of seconds to be converted to minutes\n     */\n    convertToMinutes(seconds) {\n        if (seconds === 0) {\n            if (this.props.phases[this.props.phaseIndex].title !== \"Voting\") {\n                return \"Time's up!\";\n            } else {\n                return \"\";\n            }\n        } else {\n            let min = Math.trunc(seconds / 60);\n            let sec = seconds % 60; // number of seconds left in the current minute\n            if (sec < 10) {\n                sec = \"0\" + sec;\n            }\n            return min + \":\" + sec;\n        }\n    }\n\n    /**\n     * defines the color of the timer depending on how much time is left.\n     * The timer turns yellow when time runs out.\n     */\n    isBackgroundYellow() {\n        return (this.props.timeLeft === 0) ? \"bg-yellow\" : \"bg-light\";\n    }\n}\n\nexport default Timer;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../../css/game.css';\n\n/**\n * used to control which phase of the debate currently going.\n * @prop {number} phaseIndex - the current phase of the debate.\n * @prop {object} phases - const object of the phases of the debate.\n * @prop {function} updateGame - the callback function used to update App's state\n */\nclass Controls extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            enable: false,\n            disable: true,\n            winner: true,\n        }\n    }\n\n    buttonClicked = (key) => {\n        // update state to toggle button disabled\n        let stateChanges = {};\n        if (key === \"enable\") {\n            stateChanges = {\n                \"enable\": true,\n                \"disable\": false,\n                \"winner\": true\n            };\n            // lift up voting state to App\n            this.props.updateGame(\"enable\", true); // enable audience voting\n        } else if (key === \"disable\") {\n            stateChanges = {\n                \"enable\": false,\n                \"disable\": true,\n                \"winner\": false\n            };\n            this.props.updateGame(\"enable\", false); // disable audience voting\n        } else {\n            stateChanges = {\n                \"enable\": true,\n                \"disable\": true,\n                \"winner\": true\n            };\n            this.props.updateGame(\"enable\", false); // disable audience voting\n            this.props.updateGame(\"displayWinner\", true); // display winner to audience\n        }\n        this.setState(stateChanges);\n    }\n\n    render() {\n        return (\n            <div className=\"text-center\"> \n                <div className=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"\">\n                    <button onClick={() => this.prevPhase()} type=\"button\" className=\"btn btn-outline-primary btn-secondary\"><i\n                            className=\"fa fa-step-forward fa-flip-horizontal\" aria-label=\"backward\"\n                            aria-hidden=\"true\"></i></button>\n                    <button onClick={() => this.nextPhase()} type=\"button\" className=\"btn btn-outline-primary btn-secondary\"><i\n                            className=\"fa fa-step-forward\" aria-label=\"forward\" aria-hidden=\"true\"></i></button>\n                </div>\n\n                <section className=\"buttonContainer\">\n                    <Button variant=\"primary\" disabled={this.state.enable} onClick={()=> this.buttonClicked(\"enable\")}>\n                        Enable Voting\n                    </Button>\n                    <Button variant=\"primary\" disabled={this.state.disable} onClick={()=> this.buttonClicked(\"disable\")}>\n                        Disable Voting\n                    </Button>\n                    <Button variant=\"primary\" disabled={this.state.winner} onClick={()=> this.buttonClicked(\"winner\")}>\n                        Display Winner\n                    </Button>\n                </section>\n            </div>\n        )\n    }\n\n    /**\n     * moves to the next phase of debate by updating the game state.\n     * if already on last phase, does nothing.\n     */\n    nextPhase() {\n        // update the game to have a currentPhase of currentPhase + 1\n        if (this.props.phases[this.props.phaseIndex + 1]) { \n            let newPhase = this.props.phaseIndex + 1;\n            this.props.updateGame(\"currentPhase\", newPhase);\n            this.props.updateGame(\"timeLeft\", this.props.phases[newPhase].seconds);\n        } else {\n            // do nothing. edge case: we are already at the last phase\n        }\n\n        // shouldn't run ever, but this is a sanity check in case the currentPhase\n        // ends up being bigger than the length of Phases\n        if (this.props.phaseIndex > this.props.phases.length - 1) {\n            this.props.updateGame(\"currentPhase\", this.props.phases.length - 1);\n        }\n    }\n\n    /**\n     * moves to the previous phase of the debate\n     */\n    prevPhase() {\n        console.log(\"previous!\");\n        if (this.props.phaseIndex > 0) {\n            // update the game to have a currentPhase of currentPhase - 1\n            // update timeLeft\n            let newPhase = this.props.phaseIndex - 1;\n            this.props.updateGame(\"currentPhase\", newPhase);\n            this.props.updateGame(\"timeLeft\", this.props.phases[newPhase].seconds);\n        } else {\n            // set timeLeft to be this.props.phases[0].seconds\n            this.props.updateGame(\"timeLeft\", this.props.phases[0].seconds);\n        }\n    }\n}\n\nexport default Controls;","import React from 'react';\nimport AudienceJoin from './AudienceJoin.js';\nimport Scoreboard from './Scoreboard.js';\nimport Timer from './Timer.js';\nimport Controls from './Controls';\nimport '../../css/game.css';\n\n/**\n * manages the game's scoreboard and timer.\n * closing the Admin Game of a session will pause the timer and end the debate.\n * @prop {string} sessionID - the ID of the session being accessed\n * @prop {string} player1 - name of the first player\n * @prop {string} player2 - name of the second player\n * @prop {string} topic - the argument being debated\n * @prop {object} timerObject - the object representing the timer.\n * @prop {number} timeLeft - number of seconds left in the round.\n * @prop {string} timerLabel - the message labeling the current phase\n * @prop {function} updateGame - callback function to change the state of App\n */\nclass AdminGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        if (this.props.sessionID && this.props.player1 && \n            this.props.player2 && this.props.topic) {\n            return(\n                <div>\n                    <Scoreboard \n                        player1={this.props.player1} \n                        player2={this.props.player2} \n                        topic={this.props.topic} \n                    />\n                    <Timer \n                        sessionID={this.props.sessionID}\n                        player1={this.props.player1}\n                        player2={this.props.player2}\n                        timerObject={this.props.timerObject}\n                        timeLeft={this.props.timeLeft}\n                        phaseIndex={this.props.currentPhase}\n                        phases={this.props.phases}\n                        isAdminTimer={true}\n                        updateGame={this.props.updateGame}\n                    />\n                    <Controls \n                        phaseIndex={this.props.currentPhase}\n                        phases={this.props.phases}\n                        updateGame={this.props.updateGame} \n                    />\n                    <AudienceJoin code={this.props.sessionID} />\n                </div>\n            );\n        } else {\n            return(\n                <div>\n                    <h2 id=\"error\">Session does not yet exist.</h2>\n                    <div class=\"extra-space\"></div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default AdminGame;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport '../../css/game.css';\n\nclass WinnerModal extends React.Component {\n    render() {\n        return(\n            <Modal show={this.props.show} onHide={!this.props.show} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Congrats {this.props.winner}!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"winnerBody\">\n                        <img className=\"winner-img\" src={require(\"../../img/winners.svg\")} alt=\"2 people with a golden trophy\" />\n                    </div>\n                    <br></br>\n                    We hope you learned lots during this debate and hope you bring the spirit of debate with you as you go about your daily lives!\n                </Modal.Body>\n                <Modal.Footer></Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default WinnerModal;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport WinnerModal from './WinnerModal.js';\nimport firebase from 'firebase/app';\n\n/**\n * @prop {string} sessionID - the ID of the session being accessed\n * @prop {number} votes - the current sum of votes toward the speakers.\n * @prop {string} player1 - name of the first player\n * @prop {string} player2 - name of the second player\n * @prop {boolean} disableVoting - determines whether the vote button should currently be disabled\n * @prop {boolean} displayWinner - determines whether the winner should be disclosed.\n */\nclass Vote extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        modal: false,\n        disableVoting: this.props.disableVoting,\n        voted: false\n      }\n      console.log(this.state);\n      console.log(\"votes: \" + this.props.votes);\n      // move to castVote when done testing\n      // use once snapshot to get current vote #\n  }\n\n  /**\n   * casts this particular audience member's vote.\n   * the if/else wrapper in this function protects against people manually editing\n   * the HTML to vote when voting is still disabled.\n   * @param {string} votedPlayer - \"player1\" if the button to vote for player 1 was clicked. \n   */\n  castVote (votedPlayer) {\n    let tally = (votedPlayer === \"player1\" ? 1 : -1); // calculate who I voted for\n    if (!this.disableVoting) {\n        // this.setState({voted: true}); // locks you out from voting again\n        // this.props.updateGame(\"votes\", this.props.votes + tally); // might not be necessary\n\n        // // reference the \"votes\" key in the current session\n        // // TODO: How do I specifically update an endpoint, like \"votes\"? I don't want to change anything else in Firebase\n        // let sessionRef = firebase.database().ref('sessions').child(this.props.sessionID);\n        // let voteSum = this.props.votes + tally;\n        // sessionRef.set({\n        //     votes: voteSum\n        // }).catch(err => console.log(err));\n        console.log(\"voted for \" + votedPlayer);\n    } else {\n        console.log(\"debug: uh oh! looks like you voted when the button should be disabled\");\n    }\n  }\n\n  componentDidMount() {\n    let sessionRef = firebase.database().ref('sessions/' + this.props.code);\n    sessionRef.on('value', (snapshot) => {\n        let sesh = snapshot.val();\n        this.setState({numVotes: sesh.votes})\n        console.log(sesh.votes);\n    })\n  }\n\n  // tally votes with onClick event- voted player 1? numVotes + 1\n  //                               - voted player 2? numVotes - 1\n  onClickPlayer1 = () => {\n    // let sessionRef = firebase.database().ref('sessions').child(this.props.code);\n    // sessionRef.set({\n    //     votes: this.state.numVotes + 1\n    // }).catch(err => console.log(err));\n    this.setState({voted: true});\n  }\n\n  onClickPlayer2 = () => {\n    // let sessionRef = firebase.database().ref('sessions').child(this.props.code);\n    // sessionRef.set({\n    //     votes: this.state.numVotes + 1\n    // }).catch(err => console.log(err));\n    this.setState({voted: true});\n  }\n\n  modalBody() {\n      return (\n        <div className=\"votingBody\">\n            <p>Who won the debate?</p>\n            <div className=\"modal-vote-row row\">\n                <div className=\"col\">\n                <Button variant=\"secondary\" onClick={() => this.castVote(\"player1\")}>\n                    {this.props.player1}\n                </Button>\n                </div>\n                <div className=\"col\">\n                    <p className=\"my-2\">OR</p>\n                </div>\n                <div className=\"col\">\n                <Button variant=\"secondary\" onClick={() => this.castVote(\"player2\")}>\n                {this.props.player2}\n                </Button>\n                </div>\n            </div>\n        </div>\n      )\n  }\n\n  votingMessage() {\n      return (\n        <div className=\"votingMessage\">\n            <p>\n                Hang tight as we tally the votes! <br/>\n                Click anywhere to close this modal!\n            </p>\n        </div>\n      )\n  }\n\n    render(){\n        return (\n            <section className=\"gameContainer\">\n                <div className=\"text-center\">\n                    <Button variant=\"primary\" size=\"lg\" disabled={this.props.disableVoting} onClick={() => {this.setState({modal: true, disableVoting: true})}}>Vote</Button>\n                    <Modal show={this.state.modal} onHide={() => {this.setState({modal: false})}} centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Final Vote</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            {this.state.voted ? this.votingMessage() : this.modalBody()}\n                        </Modal.Body>\n                        <Modal.Footer></Modal.Footer>\n                    </Modal>\n                    <WinnerModal show={this.props.displayWinner} winner={this.props.sessionID}/>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Vote;","import React from 'react';\nimport AudienceJoin from './AudienceJoin.js';\nimport Scoreboard from './Scoreboard.js';\nimport Timer from './Timer.js';\nimport Vote from './Vote.js';\nimport firebase from 'firebase/app';\nimport '../../css/game.css';\n\n/**\n * intended for audience members who join an existing game.\n * manages the game's scoreboard and timer.\n * @prop {string} sessionID - the ID of the session being accessed\n * @prop {object} phases - const object of the phases of the debate.\n * @prop {function} updateGame - callback function to change the state of App\n */\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sessionIsGood: false,\n            firebaseListener: null\n\n            /* The following are fields retrieved from Firebase:\n                player1\n                player2\n                topic\n                timeLeft\n                currentPhase\n                disableVoting\n                displayWinner\n            */\n        } \n    }\n    \n    /**\n     * establish a firebase connection. Every x seconds, this pings firebase for updates\n     * provided from AdminGame.\n     */\n    componentDidMount() {\n        let updateInterval = 300; /* CONFIG: length of time between each server ping */\n\n        this.state.firebaseListener = setInterval(() => {\n            firebase.database().ref('sessions/' + this.props.sessionID).once('value', (snapshot) => {\n                if (snapshot.exists()) {\n                    let sesh = snapshot.val();\n                    this.setState({\n                        player1: sesh.player1,\n                        player2: sesh.player2,\n                        topic: sesh.topic, \n                        timeLeft: sesh.timeLeft,\n                        currentPhase: sesh.currentPhase,\n                        disableVoting: !sesh.enable,\n                        displayWinner: sesh.displayWinner,\n                        sessionIsGood: true});\n                }\n            });\n        }, updateInterval);\n    }\n\n    /**\n     * removes the timer listening for Firebase changes.\n     */\n    componentWillUnmount() {\n        clearInterval(this.state.firebaseListener);\n        this.state.firebaseListener = null;\n    }\n\n    render() {\n        if (this.state.sessionIsGood) {\n                return(\n                    <div>\n                        <Scoreboard \n                            player1={this.state.player1} \n                            player2={this.state.player2} \n                            topic={this.state.topic} \n                        />\n                        <Timer \n                            player1={this.state.player1}\n                            player2={this.state.player2}\n                            timeLeft={this.state.timeLeft}\n                            phaseIndex={this.state.currentPhase}\n                            phases={this.props.phases}\n                            isAdminTimer={false}\n                            updateGame={this.props.updateGame}\n                        />\n                        <Vote \n                            player1={this.state.player1}\n                            player2={this.state.player2}\n                            votes={this.props.votes}\n                            sessionID={this.props.sessionID}\n                            disableVoting={this.state.disableVoting}\n                            displayWinner={this.state.displayWinner}\n                            updateGame={this.props.updateGame}\n                        />\n                        <AudienceJoin code={this.props.sessionID}/>\n                    </div>\n                );\n        } else {\n            return(\n                <div>\n                    <h2 id=\"error\">Error. This session does not yet exist.</h2>\n                </div>\n            );\n        }     \n    }\n}\n\nexport default Game;","import React from 'react';\nimport Navbar from './Components/Navbar.js';\nimport Footer from './Components/Footer.js';\nimport Home from './Components/Home/Home.js';\nimport CreateGame from './Components/CreateGame/CreateGame.js';\nimport AdminGame from './Components/Game/AdminGame.js';\nimport Game from './Components/Game/Game.js';\nimport LogIn from './Components/LogIn.js';\nimport './css/firebaseui-styling.global.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'; \n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBRMu88J7_n4IVzqLYfrObctzfSi-_FnP0\",\n  authDomain: \"project-kpdebate.firebaseapp.com\",\n  databaseURL: \"https://project-kpdebate.firebaseio.com\",\n  projectId: \"project-kpdebate\",\n  storageBucket: \"project-kpdebate.appspot.com\",\n  messagingSenderId: \"14281407017\",\n  appId: \"1:14281407017:web:8d8edc6edc9fa427fe7a38\",\n  measurementId: \"G-L8RHQ63M0E\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ]\n};\n\nconst phases = [{\n    title: \"Opening Statement\",\n    speaker: 1,\n    seconds: 60\n  },\n  {\n    title: \"Opening Statement\",\n    speaker: 2,\n    seconds: 60\n  },\n  {\n    title: \"Rebuttal\",\n    speaker: 1,\n    seconds: 60\n  },\n  {\n    title: \"Rebuttal\",\n    speaker: 2,\n    seconds: 60\n  },\n  {\n    title: \"Cross Examination\",\n    speaker: 1,\n    seconds: 180\n  },\n  {\n    title: \"Cross Examination\",\n    speaker: 2,\n    seconds: 180\n  },\n  {\n    title: \"Closing Statements\",\n    speaker: 1,\n    seconds: 60\n  },\n  {\n    title: \"Closing Statements\",\n    speaker: 2,\n    seconds: 60\n  },\n  {\n    title: \"Voting\",\n    seconds: 0\n  }];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // sessionID: \"4343\",\n      // player1: \"Kiran\",\n      // player2: \"Patrin\",\n      // topic: \"Is cereal a soup?\",\n      // currentSpeaker: 0,\n      // timerObject: null\n      currentPhase: 0,\n      enable: false,\n      displayWinner: false,\n      isSignedIn: false,\n      timeLeft: 60,\n      votes: 0\n    }\n  }\n\n  // callback function provided to all components\n  // updates state and firebase to maintain a decentralized connection\n  handleChange = (key, value) => {\n    let stateChanges = {\n      [key]: value\n    };\n    this.setState(stateChanges);\n    if (true) {\n      this.sessionRef = firebase.database().ref('sessions/' + this.state.sessionID);\n      this.sessionRef.set(this.state);\n    }\n\n    console.log(\"key: \" + key);\n    console.log(\"value: \" + value);\n    console.log(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Navbar \n            isSignedIn={this.state.isSignedIn} \n            updateGame={this.handleChange.bind(this)}\n            uiConfig ={uiConfig}\n            />  \n          <Switch>\n            <Route path=\"/game\" component={Game}> \n              <Game \n                sessionID={this.state.sessionID}\n                phases={phases}\n                votes={this.state.votes}\n                updateGame={this.handleChange.bind(this)}\n                />\n            </Route>\n            <Route path=\"/create-game\" component={CreateGame}>\n              <CreateGame \n                updateGame={this.handleChange.bind(this)}\n                uiConfig={uiConfig}\n              />\n            </Route>\n            <Route path=\"/admin-game\" component={Game}> \n              <AdminGame \n                sessionID={this.state.sessionID}\n                player1={this.state.player1} \n                player2={this.state.player2} \n                topic={this.state.topic} \n                timerObject={this.state.timerObject}\n                timeLeft={this.state.timeLeft}\n                currentPhase={this.state.currentPhase}\n                phases={phases}\n                updateGame={this.handleChange.bind(this)}\n                disableVoting={!this.state.enable}\n                displayWinner={this.state.displayWinner}\n                />\n            </Route>\n            <Route path=\"/sign-in\">\n              <LogIn uiConfig ={uiConfig} fbAuth = {firebase.auth()}/>                         \n            </Route>\n            <Route path=\"/\" component={Home}>\n              <Home updateGame={this.handleChange.bind(this)}/>\n            </Route>\n          </Switch>\n          <Footer />  \n      </Router>\n      </div>\n    );\n  } \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}